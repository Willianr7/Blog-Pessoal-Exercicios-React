{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GENBR130\\\\Desktop\\\\React2\\\\blog-pessoal\\\\src\\\\components\\\\postagens\\\\cadastroPost\\\\CadastroPost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\";\nimport './CadastroPost.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { busca, buscaId, post, put } from '../../../services/Service';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CadastroPost() {\n  _s();\n  let navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [temas, setTemas] = useState([]);\n  const token = useSelector(state => state.tokens);\n  useEffect(() => {\n    if (token == \"\") {\n      toast.error('Você precisa estar logado', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        theme: \"colored\",\n        progress: undefined\n      });\n      navigate(\"/login\");\n    }\n  }, [token]);\n  const [tema, setTema] = useState({\n    id: 0,\n    descricao: ''\n  });\n  const [postagem, setPostagem] = useState({\n    id: 0,\n    titulo: '',\n    texto: '',\n    tema: null\n  });\n  useEffect(() => {\n    setPostagem({\n      ...postagem,\n      tema: tema\n    });\n  }, [tema]);\n  useEffect(() => {\n    getTemas();\n    if (id !== undefined) {\n      findByIdPostagem(id);\n    }\n  }, [id]);\n  async function getTemas() {\n    await busca(\"/tema\", setTemas, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n  async function findByIdPostagem(id) {\n    await buscaId(`postagens/${id}`, setPostagem, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n  function updatedPostagem(e) {\n    setPostagem({\n      ...postagem,\n      [e.target.name]: e.target.value,\n      tema: tema\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (id !== undefined) {\n      put(`/postagens`, postagem, setPostagem, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      toast.success('Postagem atualizada com sucesso', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        theme: \"colored\",\n        progress: undefined\n      });\n    } else {\n      post(`/postagens`, postagem, setPostagem, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      toast.success('Postagem cadastrada com sucesso', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        theme: \"colored\",\n        progress: undefined\n      });\n    }\n    back();\n  }\n  function back() {\n    navigate('/posts');\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"topo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"textSecondary\",\n        component: \"h1\",\n        align: \"center\",\n        children: \"Formul\\xE1rio de cadastro postagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: postagem.titulo,\n        onChange: e => updatedPostagem(e),\n        id: \"titulo\",\n        label: \"titulo\",\n        variant: \"outlined\",\n        name: \"titulo\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: postagem.texto,\n        onChange: e => updatedPostagem(e),\n        id: \"texto\",\n        label: \"texto\",\n        name: \"texto\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-helper-label\",\n          children: \"Tema \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-helper-label\",\n          id: \"demo-simple-select-helper\",\n          onChange: e => buscaId(`/tema/${e.target.value}`, setTema, {\n            headers: {\n              'Authorization': token\n            }\n          }),\n          children: temas.map(tema => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: tema.id,\n            children: tema.descricao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          children: \"Escolha um tema para a postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Finalizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s(CadastroPost, \"gHEuTxB1miAxf+bq+D4nYfibOyM=\", false, function () {\n  return [useNavigate, useParams, useSelector];\n});\n_c = CadastroPost;\nexport default CadastroPost;\nvar _c;\n$RefreshReg$(_c, \"CadastroPost\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","TextField","Button","Select","InputLabel","MenuItem","FormControl","FormHelperText","useNavigate","useParams","busca","buscaId","post","put","useSelector","toast","CadastroPost","navigate","id","temas","setTemas","token","state","tokens","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","tema","setTema","descricao","postagem","setPostagem","titulo","texto","getTemas","findByIdPostagem","headers","updatedPostagem","e","target","name","value","onSubmit","preventDefault","success","back","map"],"sources":["C:/Users/GENBR130/Desktop/React2/blog-pessoal/src/components/postagens/cadastroPost/CadastroPost.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\";\nimport './CadastroPost.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Tema from '../../../models/Tema';\nimport Postagem from '../../../models/Postagem';\nimport { busca, buscaId, post, put } from '../../../services/Service';\nimport { useSelector } from 'react-redux';\nimport { TokenState } from '../../../store/tokens/tokensReducer';\nimport { toast } from 'react-toastify';\n\nfunction CadastroPost() {\n    let navigate = useNavigate();\n    const { id } = useParams<{ id: string }>();\n    const [temas, setTemas] = useState<Tema[]>([])\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\n        (state) => state.tokens\n      );\n\n    useEffect(() => {\n        if (token == \"\") {\n            toast.error('Você precisa estar logado', {\n                position: \"top-right\",\n                autoClose: 2000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: false,\n                theme: \"colored\",\n                progress: undefined,\n            });\n            navigate(\"/login\")\n\n        }\n    }, [token])\n\n    const [tema, setTema] = useState<Tema>(\n        {\n            id: 0,\n            descricao: ''\n        })\n    const [postagem, setPostagem] = useState<Postagem>({\n        id: 0,\n        titulo: '',\n        texto: '',\n        tema: null\n    })\n\n    useEffect(() => { \n        setPostagem({\n            ...postagem,\n            tema: tema\n        })\n    }, [tema])\n\n    useEffect(() => {\n        getTemas()\n        if (id !== undefined) {\n            findByIdPostagem(id)\n        }\n    }, [id])\n\n    async function getTemas() {\n        await busca(\"/tema\", setTemas, {\n            headers: {\n                'Authorization': token\n            }\n        })\n    }\n\n    async function findByIdPostagem(id: string) {\n        await buscaId(`postagens/${id}`, setPostagem, {\n            headers: {\n                'Authorization': token\n            }\n        })\n    }\n\n    function updatedPostagem(e: ChangeEvent<HTMLInputElement>) {\n\n        setPostagem({\n            ...postagem,\n            [e.target.name]: e.target.value,\n            tema: tema\n        })\n\n    }\n\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\n        e.preventDefault()\n\n        if (id !== undefined) {\n            put(`/postagens`, postagem, setPostagem, {\n                headers: {\n                    'Authorization': token\n                }\n            })\n            toast.success('Postagem atualizada com sucesso', {\n                position: \"top-right\",\n                autoClose: 2000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: false,\n                theme: \"colored\",\n                progress: undefined,\n            });\n        } else {\n            post(`/postagens`, postagem, setPostagem, {\n                headers: {\n                    'Authorization': token\n                }\n            })\n            toast.success('Postagem cadastrada com sucesso', {\n                position: \"top-right\",\n                autoClose: 2000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: false,\n                theme: \"colored\",\n                progress: undefined,\n            });\n        }\n        back()\n\n    }\n\n    function back() {\n        navigate('/posts')\n    }\n\n    return (\n        <Container maxWidth=\"sm\" className=\"topo\">\n            <form onSubmit={onSubmit}>\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro postagem</Typography>\n                <TextField value={postagem.titulo} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"titulo\" label=\"titulo\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\n                <TextField value={postagem.texto} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"texto\" label=\"texto\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\n\n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-helper-label\">Tema </InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-helper-label\"\n                        id=\"demo-simple-select-helper\"\n                        onChange={(e) => buscaId(`/tema/${e.target.value}`, setTema, {\n                            headers: {\n                                'Authorization': token\n                            }\n                        })}>\n                        {\n                            temas.map(tema => (\n                                <MenuItem value={tema.id}>{tema.descricao}</MenuItem>\n                            ))\n                        }\n                    </Select>\n                    <FormHelperText>Escolha um tema para a postagem</FormHelperText>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Finalizar\n                    </Button>\n                </FormControl>\n            </form>\n        </Container>\n    )\n}\nexport default CadastroPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}